<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <connectionStrings>
    <add name="ManagementConnection" connectionString="Server=.\SQLEXPRESS;Database=Thriot;Trusted_Connection=True;" providerName="System.Data.SqlClient" xdt:Transform="Replace" xdt:Locator="Match(name)" />
  </connectionStrings>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container>
      <register type="Thriot.Objects.Model.Operations.ICompanyOperations, Thriot.Objects.Model" mapTo="Thriot.Objects.Operations.Sql.CompanyOperations, Thriot.Objects.Operations.Sql" name="storageCompanyOperations" xdt:Transform="Replace" xdt:Locator="Match(name)" />
      <register type="Thriot.Objects.Model.Operations.IServiceOperations, Thriot.Objects.Model" mapTo="Thriot.Objects.Operations.Sql.ServiceOperations, Thriot.Objects.Operations.Sql" name="storageServiceOperations" xdt:Transform="Replace" xdt:Locator="Match(name)" />
      <register type="Thriot.Objects.Model.Operations.INetworkOperations, Thriot.Objects.Model" mapTo="Thriot.Objects.Operations.Sql.NetworkOperations, Thriot.Objects.Operations.Sql" name="storageNetworkOperations" xdt:Transform="Replace" xdt:Locator="Match(name)" />
      <register type="Thriot.Objects.Model.Operations.IDeviceOperations, Thriot.Objects.Model" mapTo="Thriot.Objects.Operations.Sql.DeviceOperations, Thriot.Objects.Operations.Sql" name="storageDeviceOperations" xdt:Transform="Replace" xdt:Locator="Match(name)" />
      <register type="Thriot.Objects.Model.Operations.ISettingOperations, Thriot.Objects.Model" mapTo="Thriot.Objects.Operations.Sql.SettingOperations, Thriot.Objects.Operations.Sql" name="storageSettingOperations" xdt:Transform="Replace" xdt:Locator="Match(name)" />
      <register type="Thriot.Framework.Azure.DataAccess.ICloudStorageClientFactory, Thriot.Framework.Azure" xdt:Transform="Remove" xdt:Locator="Match(type)" />
      <register type="Thriot.Objects.Operations.Sql.DataAccess.IObjectsUnitOfWorkFactory, Thriot.Objects.Operations.Sql" mapTo="Thriot.Objects.Operations.Sql.DataAccess.Sql.ObjectsUnitOfWorkFactorySql, Thriot.Objects.Operations.Sql" xdt:Transform="Insert" />
    </container>
  </unity>

  <telemetryDataSink xdt:Transform="Replace">
    <incoming>
      <sink name="sqlData" type="Thriot.Plugins.Sql.TelemetryDataSinkCurrent, Thriot.Plugins.Sql" description="Sql table for data" />
      <sink name="sqlTimeSeries" type="Thriot.Plugins.Sql.TelemetryDataSinkTimeSeries, Thriot.Plugins.Sql" description="Sql table for time series" />
      <sink name="localSqlData" type="Thriot.Plugins.Sql.TelemetryDataSinkCurrent, Thriot.Plugins.Sql" description="Locally-hosted Sql table for data">
        <parameterPresets>
          <param key="ConnectionName" value="TelemetryConnectionSql" />
          <param key="Table" value="CurrentData" />
        </parameterPresets>
      </sink>
      <sink name="localSqlTimeSeries" type="Thriot.Plugins.Sql.TelemetryDataSinkTimeSeries, Thriot.Plugins.Sql" description="Locally-hosted Sql table for time series">
        <parameterPresets>
          <param key="ConnectionName" value="TelemetryConnectionSql" />
          <param key="Table" value="TimeSeries" />
        </parameterPresets>
      </sink>
    </incoming>
  </telemetryDataSink>
</configuration>